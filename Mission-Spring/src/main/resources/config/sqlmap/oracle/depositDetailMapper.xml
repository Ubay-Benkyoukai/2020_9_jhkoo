<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="account.dao.DepositDetailDAO">

	<resultMap type="depositDetailVO" id="depositDetailMap">
		<result column="log_pk" property="logPk" />
		<result column="account_number" property="accountNumber" />
  		<result column="log_date" property="logDate" />
  		<result column="log_type_key" property="logTypeKey" />
  		<result column="to_account_number" property="toAccountNumber" />
  		<result column="to_name" property="toName" />
  		
  	</resultMap>


	
	
	
	<!-- 이번 달 내역 -->
	<select id="detailList" resultMap="depositDetailMap" parameterType="String">
		SELECT 
			   d.account_number,
			   date_format(d.log_date,'%Y년 %m월 %d일(%H시 %i분)') as log_date,
		       d.amount,
		       l.value as log_type_key,
		       d.to_account_number,
		       d.to_name
		  FROM dw_card_log d LEFT JOIN log_type l
		       ON d.log_type_key = l.key
		  WHERE account_number = #{accountNumber} AND
		  		EXTRACT(MONTH FROM log_date) = EXTRACT(MONTH FROM CURDATE()) AND
                EXTRACT(YEAR FROM log_date) = EXTRACT(YEAR FROM CURDATE())
		  ORDER BY log_date DESC
	</select>
  	
  	<!-- 이번 달 -->
  	<select id="month" resultType="String">
  		SELECT SUBSTR(CURDATE(),6,2) from dual
  	</select>
  	
  	
  	<!-- 저번 달, 앞 달 내역 -->
  	<select id="lastMonth" resultMap="depositDetailMap" parameterType="depositDetailVO">
  		SELECT 
			   d.account_number,
			   date_format(d.log_date,'%Y년 %m월 %d일(%H시 %i분)') as log_date,
		       d.amount,
		       l.value as log_type_key,
		       d.to_account_number,
		       d.to_name
		  FROM dw_card_log d LEFT JOIN log_type l
		       ON d.log_type_key = l.key
		  WHERE account_number = #{accountNumber} and
		  		EXTRACT(MONTH FROM log_date) = #{logDate} - 1 AND
                EXTRACT(YEAR FROM log_date) = EXTRACT(YEAR FROM CURDATE())
		  ORDER BY log_date DESC
  	
  	</select>
  	
  	<!-- 카테고리별 내역 -->
  	<select id="category" resultMap="depositDetailMap" parameterType="depositDetailVO">
  		SELECT 
			   d.account_number,
			   date_format(d.log_date,'%Y년 %m월 %d일(%H시 %i분)') as log_date,
		       d.amount,
		       l.value as log_type_key,
		       d.to_account_number,
		       d.to_name
		  FROM dw_card_log d LEFT JOIN log_type l
		       ON d.log_type_key = l.key
		  WHERE account_number = #{accountNumber} AND
		  		EXTRACT(MONTH FROM log_date) = #{logDate} AND
                EXTRACT(YEAR FROM log_date) = EXTRACT(YEAR FROM CURDATE()) AND
                log_type_key = #{logTypeKey}
		  ORDER BY log_date DESC
  	</select>
  	
  	
  	<!-- 선택 카테고리의 저번 달 지출 총액 -->
  	<select id="lastMonthSumByCategory" resultType="int" parameterType="depositDetailVO">
	  	SELECT SUM(amount)
	  	 FROM dw_card_log 
	 	 WHERE EXTRACT(MONTH FROM log_date) = MONTH(CURDATE())-1 AND
	       	   account_number=#{accountNumber} AND
	       	   log_type_key = #{logTypeKey}
  	</select>
  	
  	
  	<!-- 도전하기. 메인계좌의, 이번달, 해당 카테고리의 총 지출액 -->
  	<select id="nowBalanceByType" resultType="int" parameterType="depositDetailVO" >
  		SELECT SUM(amount) 
  		    FROM dw_card_log
 			WHERE account_number = #{accountNumber} AND
       			  log_type_key = #{logTypeKey} AND
       			  EXTRACT(YEAR FROM log_date) = EXTRACT(YEAR FROM CURDATE()) AND
       			  EXTRACT(MONTH FROM log_date) = EXTRACT(MONTH FROM CURDATE())
  	</select>
  	
  	
  	<!-- 해당 계좌번호 이번 달 지출액 가져오기 -->
  	<select id="expenditureThisMonth" resultType="int" parameterType="String">
  		SELECT SUM(amount)
  			FROM dw_card_log
  			WHERE account_number = #{accountNumber} AND
  			log_type_key != '1' AND
  			EXTRACT(YEAR FROM log_date) = EXTRACT(YEAR FROM CURDATE()) AND
       		EXTRACT(MONTH FROM log_date) = EXTRACT(MONTH FROM CURDATE())
  	</select>
  	
  	
  	
  	
  	<!-- 잦은 지출 순  -->
  	<select id="frequentExpenditure" resultType="depositDetailVO" parameterType="String">
		SELECT DISTINCT
		       d.to_name as toName,
               d.account_number as accountNumber,
               count(*)over(partition by d.to_name) as count
		  FROM dw_card_log d LEFT JOIN log_type l
		       ON d.log_type_key = l.key
		  WHERE account_number = #{accountNumber} AND
		  		EXTRACT(MONTH FROM log_date) = EXTRACT(MONTH FROM CURDATE()) AND
                EXTRACT(YEAR FROM log_date) = EXTRACT(YEAR FROM CURDATE()) AND
                d.log_type_key != '1'
           ORDER BY count DESC  	
  	</select>
  	
  	
  	
  	<!-- 선택된 이번달 잦은 지출 정보(날짜, 금액)  -->
  	<select id="getFrequentDetail" resultType="depositDetailVO" parameterType="depositDetailVO">
  		SELECT date_format(log_date,'%Y년 %m월 %d일(%H시 %i분)') as logDate, 
  		       amount,
  		       to_name as toName
  			FROM dw_card_log
  			WHERE account_number = #{accountNumber} AND
  			      to_name = #{toName} AND
		  		  EXTRACT(MONTH FROM log_date) = EXTRACT(MONTH FROM CURDATE()) AND
                  EXTRACT(YEAR FROM log_date) = EXTRACT(YEAR FROM CURDATE())
            ORDER BY log_date
  			
  	</select>
  	
  	
  	
  	<!-- 이번 달 지출 Top3 정보 -->
  	<select id="expenditureTop3" resultType="depositDetailVO" parameterType="String">
  	<![CDATA[
  	SELECT amount, to_name as toName, account_number as accountNumber,
  		   date_format(log_date,'%Y년 %m월 %d일(%H시 %i분)') as logDate
	FROM( SELECT d.log_date, d.amount, d.to_name, d.account_number
		      FROM dw_card_log d
		      WHERE d.account_number = #{accountNumber} AND
		            EXTRACT(MONTH FROM d.log_date) = EXTRACT(MONTH FROM CURDATE()) AND
                  	EXTRACT(YEAR FROM d.log_date) = EXTRACT(YEAR FROM CURDATE()) AND
		            d.log_type_key != '2' AND d.log_type_key !='1'         
		      ORDER BY d.amount DESC) m
	LIMIT 3;
  	]]>
  	</select>
  	
  	
  	
  	<!-- 이번 월 수입 알려주기 -->
  	<select id="depositByMonth1" resultType="int" parameterType="String">
  	SELECT SUM(amount) FROM dw_card_log 
	 	 WHERE EXTRACT(MONTH FROM log_date) = MONTH(CURDATE()) AND
	       	   account_number=#{accountNumber} AND
	       	   log_type_key = '1'
  	</select>
  	<!-- 저번 월 수입 알려주기 -->
  	<select id="depositByMonth2" resultType="int" parameterType="String">
  	SELECT SUM(amount) FROM dw_card_log 
	 	 WHERE EXTRACT(MONTH FROM log_date) = MONTH(CURDATE())-1 AND
	       	   account_number=#{accountNumber} AND
	       	   log_type_key = '1'
  	</select>  
  	<!-- 저저번 월 수입 알려주기 -->
  	<select id="depositByMonth3" resultType="int" parameterType="String">
  	SELECT SUM(amount) FROM dw_card_log 
	 	 WHERE EXTRACT(MONTH FROM log_date) = MONTH(CURDATE())-2 AND
	       	   account_number=#{accountNumber} AND
	       	   log_type_key = '1'
  	</select>  		
  	<!-- 저저저번 월 수입 알려주기 -->
  	<select id="depositByMonth4" resultType="int" parameterType="String">
  	SELECT SUM(amount) FROM dw_card_log 
	 	 WHERE EXTRACT(MONTH FROM log_date) = MONTH(CURDATE())-3 AND
	       	   account_number=#{accountNumber} AND
	       	   log_type_key = '1'
  	</select>  
  	
  	
  	<!-- 이번 월 지출 알려주기 -->
   	<select id="withdrawByMonth1" resultType="int" parameterType="String">
  	SELECT SUM(amount) FROM dw_card_log 
	 	 WHERE EXTRACT(MONTH FROM log_date) = MONTH(CURDATE()) AND
	       	   account_number=#{accountNumber} AND
	       	   log_type_key != '1'
  	</select>
  	<!-- 저번 월 지출 알려주기 -->
  	<select id="withdrawByMonth2" resultType="int" parameterType="String">
  	SELECT SUM(amount) FROM dw_card_log 
	 	 WHERE EXTRACT(MONTH FROM log_date) = MONTH(CURDATE())-1 AND
	       	   account_number=#{accountNumber} AND
	       	   log_type_key != '1'
  	</select>  
  	<!-- 저저번 월 지출 알려주기 -->
  	<select id="withdrawByMonth3" resultType="int" parameterType="String">
  	SELECT SUM(amount) FROM dw_card_log 
	 	 WHERE EXTRACT(MONTH FROM log_date) = MONTH(CURDATE())-2 AND
	       	   account_number=#{accountNumber} AND
	       	   log_type_key != '1'
  	</select>   	
  	<!-- 저저저번 월 지출 알려주기 -->
  	<select id="withdrawByMonth4" resultType="int" parameterType="String">
  	SELECT SUM(amount) FROM dw_card_log 
	 	 WHERE EXTRACT(MONTH FROM log_date) = MONTH(CURDATE())-3 AND
	       	   account_number=#{accountNumber} AND
	       	   log_type_key != '1'
  	</select>
  	
  	
  	<!-- 이번 달 주별 지출액 -->
  	<select id="expenditureByWeek" resultType="depositDetailVO" parameterType="String">
  	SELECT date_format(log_date, '%u') as week, SUM(amount) as sumAmount
	 FROM dw_card_log
	 WHERE log_type_key != '1' AND 
	       account_number = #{accountNumber} AND
	       EXTRACT(MONTH FROM log_date) = MONTH(CURDATE()) AND
	       EXTRACT(YEAR FROM log_date) = EXTRACT(YEAR FROM CURDATE())
	 GROUP BY date_format(log_date, '%u')
	 ORDER BY week
  	</select>
  	
  	
  	<!-- 페이징. 총 게시글 갯수 -->
  	<select id="countBoard" resultType="int">
  		SELECT count(*) 
  		 FROM dw_card_log 
  		 WHERE account_number = #{accountNumber}
  	</select>
  	
  	<!-- 페이징. 페이징 처리 후 게시글 조회 -->
  	<select id="selectBoard" resultType="depositDetailVO">
        SELECT 
        	   rn, account_number as accountNumber, log_date as logDate, amount, log_type_key as logTypeKey, to_account_number as logAccountNumber, to_name as toName
  		 FROM(
  		 	SELECT (@ROWNUM:=@ROWNUM+1) as rn, A.*
  		 	FROM(		
	  		  SELECT 
				   d.account_number,
				   date_format(d.log_date,'%Y년 %m월 %d일(%H시 %i분)') as log_date ,
			       d.amount,
			       l.value as log_type_key,
			       d.to_account_number,
			       d.to_name
			  FROM dw_card_log d LEFT JOIN log_type l
			       ON d.log_type_key = l.key
			  WHERE account_number = #{accountNumber} AND
			  		EXTRACT(MONTH FROM log_date) = EXTRACT(MONTH FROM CURDATE()) AND
	                EXTRACT(YEAR FROM log_date) = EXTRACT(YEAR FROM CURDATE())
			  ORDER BY log_date DESC) A 
			 WHERE (@ROWNUM:=0)=0
  		 ) B
  		 LIMIT #{start} , #{end} 
  	</select>
  	
  	<!-- 페이징. 월 이동 -->
   	<select id="selectBoardMonthChange" resultType="depositDetailVO">
        SELECT 
        	   rn, account_number as accountNumber, log_date as logDate, amount, log_type_key as logTypeKey, to_account_number as logAccountNumber, to_name as toName
  		 FROM(
  		 SELECT (@ROWNUM:=@ROWNUM+1) as rn, A.*
  		 	FROM(		
  		 	  	  SELECT 
					   d.account_number,
				   	   date_format(d.log_date,'%Y년 %m월 %d일(%H시 %i분)') as log_date ,
				       d.amount,
				       l.value as log_type_key,
				       d.to_account_number,
				       d.to_name
				  FROM dw_card_log d LEFT JOIN log_type l
				       ON d.log_type_key = l.key
				  WHERE account_number = #{accountNumber} AND
				  		EXTRACT(MONTH FROM log_date) = #{logDate} - 1 AND
		                EXTRACT(YEAR FROM log_date) = EXTRACT(YEAR FROM CURDATE())
				  ORDER BY log_date DESC) A 
				 WHERE (@ROWNUM:=0)=0
  		    ) B
  		 LIMIT #{start} , #{end} 
  	</select>
  	
  	 	
</mapper>